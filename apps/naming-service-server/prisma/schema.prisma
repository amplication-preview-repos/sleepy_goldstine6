datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Customer {
  createdAt          DateTime            @default(now())
  email              String?
  id                 String              @id @default(cuid())
  name               String?
  questionnaires     Questionnaire[]
  suggestionRequests SuggestionRequest[]
  updatedAt          DateTime            @updatedAt
}

model Questionnaire {
  answers            Json?
  createdAt          DateTime            @default(now())
  customer           Customer?           @relation(fields: [customerId], references: [id])
  customerId         String?
  id                 String              @id @default(cuid())
  questions          Json?
  suggestionRequests SuggestionRequest[]
  updatedAt          DateTime            @updatedAt
}

model NameSuggestion {
  createdAt           DateTime           @default(now())
  domainChecks        DomainCheck[]
  id                  String             @id @default(cuid())
  isChosen            Boolean?
  name                String?
  suggestionRequest   SuggestionRequest? @relation(fields: [suggestionRequestId], references: [id])
  suggestionRequestId String?
  updatedAt           DateTime           @updatedAt
}

model SuggestionRequest {
  createdAt       DateTime                     @default(now())
  customer        Customer?                    @relation(fields: [customerId], references: [id])
  customerId      String?
  id              String                       @id @default(cuid())
  nameSuggestions NameSuggestion[]
  questionnaire   Questionnaire?               @relation(fields: [questionnaireId], references: [id])
  questionnaireId String?
  status          EnumSuggestionRequestStatus?
  updatedAt       DateTime                     @updatedAt
}

model DomainCheck {
  createdAt        DateTime        @default(now())
  domain           String?
  id               String          @id @default(cuid())
  isAvailable      Boolean?
  nameSuggestion   NameSuggestion? @relation(fields: [nameSuggestionId], references: [id])
  nameSuggestionId String?
  updatedAt        DateTime        @updatedAt
}

enum EnumSuggestionRequestStatus {
  Option1
}
